version: "3.7"

services:
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    hostname: clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./click/init:/docker-entrypoint-initdb.d
      - ./click/config.xml:/etc/clickhouse-server/config.xml
      - ./click/users.xml:/etc/clickhouse-server/users.xml
    ulimits:
      nproc: 65535
      nofile:
        soft: 262144
        hard: 262144
    restart: on-failure

  app:
    container_name: app
    image: app-image
    environment:
      CLICK_HOST: "clickhouse:8123"
      CLICK_DB: "curdb"
      CLICK_USER: "kirill"
      CLICK_PASSWORD: "parfenov"
      KAFKA_SERVERS: "kafka-1:9092,kafka-2:9093,kafka-3:9094"
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8383:8383"
    depends_on:
      - clickhouse
      - zookeeper
      - kafka-1
      - kafka-2
      - kafka-3
    restart: on-failure

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZK_SERVER_HEAP: "-Xmx256M -Xms256M"
    ports:
      - "2181:2181"

  kafka-1:
    container_name: kafka-broker-1
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_HEAP_OPTS: "-Xmx256M -Xms256M"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka-2:
    container_name: kafka-broker-2
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "39092:39092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9093,PLAINTEXT_HOST://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_HEAP_OPTS: "-Xmx256M -Xms256M"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka-3:
    container_name: kafka-broker-3
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "49092:49092"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9094,PLAINTEXT_HOST://localhost:49092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_HEAP_OPTS: "-Xmx256M -Xms256M"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafka-ui
    restart: "no"
    ports:
      - "9001:9000"
    depends_on:
      - zookeeper
      - kafka-1
      - kafka-2
      - kafka-3
    environment:
      KAFKA_BROKERCONNECT: "PLAINTEXT://kafka-1:9092,PLAINTEXT://kafka-2:9093,PLAINTEXT://kafka-3:9094"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"